import{r as e,o as p,c as o,a as s,b as l,F as c,e as a,d as n}from"./app.ba8a48bd.js";import{_ as i}from"./plugin-vue_export-helper.21dcd24c.js";const u={},r=a(`<h1 id="keybindings" tabindex="-1"><a class="header-anchor" href="#keybindings" aria-hidden="true">#</a> Keybindings</h1><h2 id="general-bindings" tabindex="-1"><a class="header-anchor" href="#general-bindings" aria-hidden="true">#</a> General Bindings</h2><p>There are three style options for settings keybindings.</p><h3 id="vim-style" tabindex="-1"><a class="header-anchor" href="#vim-style" aria-hidden="true">#</a> Vim style</h3><p>Set bindings with vim.cmd. For more details read <code>:help vim.cmd</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token operator">#</span> Just take your vim keybindings <span class="token keyword">and</span> wrap them <span class="token keyword">in</span> vim<span class="token punctuation">.</span>cmd
vim<span class="token punctuation">.</span><span class="token function">cmd</span><span class="token punctuation">(</span><span class="token string">&quot;nnoremap W :w&lt;CR&gt;&quot;</span><span class="token punctuation">)</span>

<span class="token operator">#</span> Multiline Statements
vim<span class="token punctuation">.</span><span class="token function">cmd</span><span class="token punctuation">(</span><span class="token string">[[
    map &lt;Leader&gt;bb :!bundle install&lt;cr&gt;
    map &lt;Leader&gt;gdm :Git diff master&lt;cr&gt;
    imap jj &lt;esc&gt;
]]</span><span class="token punctuation">)</span>

<span class="token operator">#</span> Calling lua functions
vim<span class="token punctuation">.</span><span class="token function">cmd</span><span class="token punctuation">(</span><span class="token string">&quot;nnoremap &lt;silent&gt; gi &lt;cmd&gt;lua vim.lsp.buf.implementation()&lt;CR&gt;&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="neovim-style" tabindex="-1"><a class="header-anchor" href="#neovim-style" aria-hidden="true">#</a> Neovim style</h3><p>Use the <code>vim.api.nvim_set_keymap</code> function. Arguments for the function are: (mode, keybind, command, options). For more details read <code>:help map-arguments</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_set_keymap</span><span class="token punctuation">(</span><span class="token string">&#39;n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;Leader&gt;&lt;Space&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;:set hlsearch!&lt;CR&gt;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> noremap <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> silent <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">-- Vim equivalent</span>
<span class="token comment">-- :nnoremap &lt;silent&gt; &lt;Leader&gt;&lt;Space&gt; :set hlsearch&lt;CR&gt;</span>

vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_set_keymap</span><span class="token punctuation">(</span><span class="token string">&#39;n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;Leader&gt;tegf&#39;</span><span class="token punctuation">,</span>  <span class="token string">[[&lt;Cmd&gt;lua require(&#39;telescope.builtin&#39;).git_files()&lt;CR&gt;]]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> noremap <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> silent <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">-- Vim equivalent</span>
<span class="token comment">-- :nnoremap &lt;silent&gt; &lt;Leader&gt;tegf &lt;Cmd&gt;lua require(&#39;telescope.builtin&#39;).git_files()&lt;CR&gt;</span>

vim<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">nvim_buf_set_keymap</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;line(&quot;.&quot;) == 1 ? &quot;cc&quot; : &quot;ggcc&quot;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> noremap <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span> expr <span class="token operator">=</span> <span class="token keyword">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">-- Vim equivalent</span>
<span class="token comment">-- :noremap &lt;buffer&gt; &lt;expr&gt; cc line(&#39;.&#39;) == 1 ? &#39;cc&#39; : &#39;ggcc&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="lunarvim-keybindings" tabindex="-1"><a class="header-anchor" href="#lunarvim-keybindings" aria-hidden="true">#</a> LunarVim keybindings</h3><p>Use <code>&lt;Leader&gt;Lk</code> to view the keybindings set by Lunarvim.</p><p>To modify a single Lunarvim keymapping</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>  <span class="token comment">-- X closes a buffer</span>
  lvim<span class="token punctuation">.</span>keys<span class="token punctuation">.</span>normal_mode<span class="token punctuation">[</span><span class="token string">&quot;&lt;S-x&gt;&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;:BufferClose&lt;CR&gt;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>To remove keymappings set by Lunarvim</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>  <span class="token comment">-- use the default vim behavior for H and L</span>
  lvim<span class="token punctuation">.</span>keys<span class="token punctuation">.</span>normal_mode<span class="token punctuation">[</span><span class="token string">&quot;&lt;S-l&gt;&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">false</span>
  lvim<span class="token punctuation">.</span>keys<span class="token punctuation">.</span>normal_mode<span class="token punctuation">[</span><span class="token string">&quot;&lt;S-h&gt;&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">false</span>
  <span class="token comment">-- vim.opt.scrolloff = 0 -- Required so L moves to the last line</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="listing-what-is-mapped" tabindex="-1"><a class="header-anchor" href="#listing-what-is-mapped" aria-hidden="true">#</a> Listing what is mapped</h3><p>Use <code>&lt;Leader&gt;Lk</code> to view the keybindings set by Lunarvim.</p><p>To see if a particular key has already been bound:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">:</span>verbose map <span class="token operator">&lt;</span>TAB<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>:nmap for normal mode mappings</li><li>:vmap for visual mode mappings</li><li>:imap for insert mode mappings</li></ul><p>Or just list every mapping</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">:</span>map
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>To output this to a searchable buffer</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">:</span>enew<span class="token operator">|</span>pu<span class="token operator">=</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">&#39;map&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>To view keybindings for the nvimtree plugin. Make sure you&#39;re in an nvimtree buffer and type <code>g?</code> to toggle the keybindings help</p><h2 id="whichkey-bindings" tabindex="-1"><a class="header-anchor" href="#whichkey-bindings" aria-hidden="true">#</a> Whichkey Bindings</h2><p>To add or remap keybindings for whichkey use <code>lvim.builtin.which_key.mappings</code></p><h3 id="single-mapping" tabindex="-1"><a class="header-anchor" href="#single-mapping" aria-hidden="true">#</a> Single mapping</h3><p>Map a single key.</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>which_key<span class="token punctuation">.</span>mappings<span class="token punctuation">[</span><span class="token string">&quot;P&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;&lt;cmd&gt;lua require&#39;telescope&#39;.extensions.project.project{}&lt;CR&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Projects&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Adding a key to a existing submenu.</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>which_key<span class="token punctuation">.</span>mappings<span class="token punctuation">[</span><span class="token string">&quot;tP&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;&lt;cmd&gt;lua require&#39;telescope&#39;.extensions.project.project{}&lt;CR&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Projects&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="submenu-mapping" tabindex="-1"><a class="header-anchor" href="#submenu-mapping" aria-hidden="true">#</a> Submenu mapping</h3><p>Map a group of keys. <code>Definitions</code> would be triggered by pressing <code>&lt;Leader&gt;td</code>. The name for this menu would appear as <code>Trouble</code>.</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>which_key<span class="token punctuation">.</span>mappings<span class="token punctuation">[</span><span class="token string">&quot;t&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name <span class="token operator">=</span> <span class="token string">&quot;Trouble&quot;</span><span class="token punctuation">,</span>
  r <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;Trouble lsp_references&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;References&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  f <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;Trouble lsp_definitions&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Definitions&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  d <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;Trouble lsp_document_diagnostics&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Diagnosticss&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  q <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;Trouble quickfix&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;QuickFix&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  l <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;Trouble loclist&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;LocationList&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  w <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;Trouble lsp_workspace_diagnostics&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Diagnosticss&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="replace-all-whichkey-mappings" tabindex="-1"><a class="header-anchor" href="#replace-all-whichkey-mappings" aria-hidden="true">#</a> Replace all whichkey mappings</h3><p>To clear all whichkey bindings and replace all mappings with your own, use this form.</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>builtin<span class="token punctuation">.</span>which_key<span class="token punctuation">.</span>mappings <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;BufferClose!&lt;CR&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Close Buffer&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require&#39;core.nvimtree&#39;.toggle_tree()&lt;CR&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Explorer&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&quot;h&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;&lt;cmd&gt;let @/=&quot;&quot;&lt;CR&gt;&#39;</span><span class="token punctuation">,</span> <span class="token string">&quot;No Highlight&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>

  p <span class="token operator">=</span> <span class="token punctuation">{</span>
    name <span class="token operator">=</span> <span class="token string">&quot;Packer&quot;</span><span class="token punctuation">,</span>
    c <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;PackerCompile&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Compile&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    i <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;PackerInstall&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Install&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    r <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;lua require(&#39;lv-utils&#39;).reload_lv_config()&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Reload&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    s <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;PackerSync&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Sync&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    u <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;&lt;cmd&gt;PackerUpdate&lt;cr&gt;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Update&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="example-mappings" tabindex="-1"><a class="header-anchor" href="#example-mappings" aria-hidden="true">#</a> Example mappings</h3>`,39),k=n("Consult the "),d={href:"https://github.com/LunarVim/LunarVim/blob/rolling/lua/lvim/core/which-key.lua",target:"_blank",rel:"noopener noreferrer"},m=n("LunarVim configuration for whichkey"),g=n(" to see more examples of how to map keys."),b=a(`<h2 id="leader-key" tabindex="-1"><a class="header-anchor" href="#leader-key" aria-hidden="true">#</a> Leader Key</h2><p>The default leader key is <code>Space</code>. This can be changed with the following</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>leader <span class="token operator">=</span> <span class="token string">&quot;space&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="cursor-movement" tabindex="-1"><a class="header-anchor" href="#cursor-movement" aria-hidden="true">#</a> Cursor Movement</h2><p>By default, when pressing left/right cursor keys, Vim will not move to the previous/next line after reaching first/last character in the line. This can be quite annoying for new users. Fortunately this behaviour can be easily changed by putting this in your vimrc file:</p><p>To enable:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>line_wrap_cursor_movement <span class="token operator">=</span> <span class="token keyword">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Enabling maps the following command</p><div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token keyword">set</span> <span class="token builtin">whichwrap</span><span class="token operator">+=</span><span class="token operator">&lt;</span><span class="token punctuation">,</span><span class="token operator">&gt;</span><span class="token punctuation">,</span><span class="token keyword">h</span><span class="token punctuation">,</span><span class="token keyword">l</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div>`,9);function h(v,q){const t=e("ExternalLinkIcon");return p(),o(c,null,[r,s("p",null,[k,s("a",d,[m,l(t)]),g]),b],64)}var _=i(u,[["render",h]]);export{_ as default};
