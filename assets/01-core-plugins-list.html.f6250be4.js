import{e as t}from"./app.ba8a48bd.js";import{_ as e}from"./plugin-vue_export-helper.21dcd24c.js";const i={},r=t('<h1 id="core-plugins-list" tabindex="-1"><a class="header-anchor" href="#core-plugins-list" aria-hidden="true">#</a> Core Plugins List</h1><table><thead><tr><th>name</th><th>description</th><th>status</th></tr></thead><tbody><tr><td><a href="https://github.com/nvim-telescope/telescope.nvim">nvim-telescope/telescope.nvim</a></td><td>Find, Filter, Preview, Pick. All lua, all the time.</td><td></td></tr><tr><td><a href="https://github.com/lewis6991/gitsigns.nvim">lewis6991/gitsigns.nvim</a></td><td>Git integration for buffers</td><td></td></tr><tr><td><a href="https://github.com/folke/lua-dev.nvim">folke/lua-dev.nvim</a></td><td>\u{1F4BB} Dev setup for init.lua and plugin development with full signature help, docs and completion for the nvim lua API.</td><td></td></tr><tr><td><a href="https://github.com/nvim-treesitter/nvim-treesitter">nvim-treesitter/nvim-treesitter</a></td><td>Nvim Treesitter configurations and abstraction layer</td><td></td></tr><tr><td><a href="https://github.com/folke/which-key.nvim">folke/which-key.nvim</a></td><td>\u{1F4A5} Create key bindings that stick. WhichKey is a lua plugin for Neovim 0.5 that displays a popup with possible keybindings of the command you started typing.</td><td></td></tr><tr><td><a href="https://github.com/akinsho/bufferline.nvim">akinsho/bufferline.nvim</a></td><td>A snazzy bufferline for Neovim</td><td></td></tr><tr><td><a href="https://github.com/hrsh7th/nvim-cmp">hrsh7th/nvim-cmp</a></td><td>A completion plugin for neovim coded in Lua.</td><td></td></tr><tr><td><a href="https://github.com/hrsh7th/cmp-path">hrsh7th/cmp-path</a></td><td>nvim-cmp source for path</td><td></td></tr><tr><td><a href="https://github.com/kyazdani42/nvim-tree.lua">kyazdani42/nvim-tree.lua</a></td><td>A file explorer tree for neovim written in lua</td><td></td></tr><tr><td><a href="https://github.com/numToStr/Comment.nvim">numToStr/Comment.nvim</a></td><td>\u{1F9E0} \u{1F4AA} // Smart and powerful comment plugin for neovim. Supports treesitter, dot repeat, left-right/up-down motions, hooks, and more</td><td></td></tr><tr><td><a href="https://github.com/kyazdani42/nvim-web-devicons">kyazdani42/nvim-web-devicons</a></td><td>lua <code>fork</code> of vim-web-devicons for neovim</td><td></td></tr><tr><td><a href="https://github.com/b0o/schemastore.nvim">b0o/schemastore.nvim</a></td><td>\u{1F6CD} JSON schemas for Neovim</td><td></td></tr><tr><td><a href="https://github.com/windwp/nvim-autopairs">windwp/nvim-autopairs</a></td><td>autopairs for neovim written by lua</td><td></td></tr><tr><td><a href="https://github.com/goolord/alpha-nvim">goolord/alpha-nvim</a></td><td>a lua powered greeter like vim-startify / dashboard-nvim</td><td></td></tr><tr><td><a href="https://github.com/JoosepAlviste/nvim-ts-context-commentstring">JoosepAlviste/nvim-ts-context-commentstring</a></td><td>Neovim treesitter plugin for setting the commentstring based on the cursor location in a file.</td><td></td></tr><tr><td><a href="https://github.com/ahmedkhalf/project.nvim">ahmedkhalf/project.nvim</a></td><td>The superior project management solution for neovim.</td><td></td></tr><tr><td><a href="https://github.com/L3MON4D3/LuaSnip">L3MON4D3/LuaSnip</a></td><td>Snippet Engine for Neovim written in Lua.</td><td></td></tr><tr><td><a href="https://github.com/saadparwaiz1/cmp_luasnip">saadparwaiz1/cmp_luasnip</a></td><td>luasnip completion source for nvim-cmp</td><td></td></tr><tr><td><a href="https://github.com/nvim-lua/plenary.nvim">nvim-lua/plenary.nvim</a></td><td>plenary: full; complete; entire; absolute; unqualified. All the lua functions I don&#39;t want to write twice.</td><td></td></tr><tr><td><a href="https://github.com/hrsh7th/cmp-buffer">hrsh7th/cmp-buffer</a></td><td>nvim-cmp source for buffer words</td><td></td></tr><tr><td><a href="https://github.com/antoinemadec/FixCursorHold.nvim">antoinemadec/FixCursorHold.nvim</a></td><td>Fix CursorHold Performance.</td><td></td></tr><tr><td><a href="https://github.com/lunarvim/onedarker.nvim">lunarvim/onedarker.nvim</a></td><td>Onedark inspired colorscheme written in lua.</td><td></td></tr><tr><td><a href="https://github.com/nvim-lua/popup.nvim">nvim-lua/popup.nvim</a></td><td>[WIP] An implementation of the Popup API from vim in Neovim. Hope to upstream when complete</td><td></td></tr><tr><td><a href="https://github.com/Tastyep/structlog.nvim">Tastyep/structlog.nvim</a></td><td>Structured Logging for nvim, using Lua</td><td></td></tr><tr><td><a href="https://github.com/jose-elias-alvarez/null-ls.nvim">jose-elias-alvarez/null-ls.nvim</a></td><td>Use Neovim as a language server to inject LSP diagnostics, code actions, and more via Lua.</td><td></td></tr><tr><td><a href="https://github.com/williamboman/nvim-lsp-installer">williamboman/nvim-lsp-installer</a></td><td>Neovim plugin that allows you to seamlessly manage LSP servers with :LspInstall. With full Windows support!</td><td></td></tr><tr><td><a href="https://github.com/neovim/nvim-lspconfig">neovim/nvim-lspconfig</a></td><td>Quickstart configurations for the Nvim LSP client</td><td></td></tr><tr><td><a href="https://github.com/rafamadriz/friendly-snippets">rafamadriz/friendly-snippets</a></td><td>Set of preconfigured snippets for different languages.</td><td></td></tr><tr><td><a href="https://github.com/tamago324/nlsp-settings.nvim">tamago324/nlsp-settings.nvim</a></td><td>A plugin for setting Neovim LSP with JSON or YAML files</td><td></td></tr><tr><td><a href="https://github.com/hrsh7th/cmp-nvim-lsp">hrsh7th/cmp-nvim-lsp</a></td><td>nvim-cmp source for neovim builtin LSP client</td><td></td></tr><tr><td><a href="https://github.com/nvim-lualine/lualine.nvim">nvim-lualine/lualine.nvim</a></td><td>A blazing fast and easy to configure neovim statusline plugin written in pure lua.</td><td></td></tr><tr><td><a href="https://github.com/nvim-telescope/telescope-fzf-native.nvim">nvim-telescope/telescope-fzf-native.nvim</a></td><td>FZF sorter for telescope written in c</td><td></td></tr><tr><td><a href="https://github.com/wbthomason/packer.nvim">wbthomason/packer.nvim</a></td><td>A use-package inspired plugin manager for Neovim. Uses native packages, supports Luarocks dependencies, written in Lua, allows for expressive config</td><td></td></tr><tr><td><a href="https://github.com/rcarriga/nvim-notify">rcarriga/nvim-notify</a></td><td>A fancy, configurable, notification manager for NeoVim</td><td>optional</td></tr><tr><td><a href="https://github.com/Pocco81/DAPInstall.nvim">Pocco81/DAPInstall.nvim</a></td><td>\u{1F986} A NeoVim plugin for managing several debuggers for Nvim-dap</td><td>optional</td></tr><tr><td><a href="https://github.com/akinsho/toggleterm.nvim">akinsho/toggleterm.nvim</a></td><td>A neovim lua plugin to help easily manage multiple terminal windows</td><td>optional</td></tr><tr><td><a href="https://github.com/mfussenegger/nvim-dap">mfussenegger/nvim-dap</a></td><td>Debug Adapter Protocol client implementation for Neovim (&gt;= 0.5)</td><td>optional</td></tr></tbody></table>',2);function a(d,n){return r}var s=e(i,[["render",a]]);export{s as default};
