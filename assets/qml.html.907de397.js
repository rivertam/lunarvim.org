import{r as t,o as l,c as i,a as n,b as a,w as p,F as c,d as e,e as o}from"./app.ba8a48bd.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const d={},h=n("h1",{id:"qml",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#qml","aria-hidden":"true"},"#"),e(" QML")],-1),m=n("h2",{id:"install-syntax-highlighting",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#install-syntax-highlighting","aria-hidden":"true"},"#"),e(" Install Syntax Highlighting")],-1),g=e("There is no official Treesitter support for QML, so instead you could use "),_={href:"https://github.com/peterhoeg/vim-qml",target:"_blank",rel:"noopener noreferrer"},b=e("the plugin"),f=e(":"),k=o(`<div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code><span class="token punctuation">{</span>
  <span class="token string">&quot;peterhoeg/vim-qml&quot;</span><span class="token punctuation">,</span>
  event <span class="token operator">=</span> <span class="token string">&quot;BufRead&quot;</span><span class="token punctuation">,</span>
  ft <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;qml&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="supported-language-servers" tabindex="-1"><a class="header-anchor" href="#supported-language-servers" aria-hidden="true">#</a> Supported language servers</h2>`,2),v=e("Currently QML does not have an official LSP, but its development is currently "),q={href:"https://bugreports.qt.io/browse/QTBUG-68406",target:"_blank",rel:"noopener noreferrer"},x=e("in progress"),L=e("."),S=o(`<h2 id="supported-formatters" tabindex="-1"><a class="header-anchor" href="#supported-formatters" aria-hidden="true">#</a> Supported formatters</h2><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>qml <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;qmlformat&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="supported-linters" tabindex="-1"><a class="header-anchor" href="#supported-linters" aria-hidden="true">#</a> Supported linters</h2><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>qml <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;qmllint&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="see-also" tabindex="-1"><a class="header-anchor" href="#see-also" aria-hidden="true">#</a> See also</h2>`,5),y=e("C/C++ Configuration");function C(B,N){const s=t("ExternalLinkIcon"),r=t("RouterLink");return l(),i(c,null,[h,m,n("p",null,[g,n("a",_,[b,a(s)]),f]),k,n("p",null,[v,n("a",q,[x,a(s)]),L]),S,n("ul",null,[n("li",null,[a(r,{to:"/languages/c_cpp.html"},{default:p(()=>[y]),_:1})])])],64)}var V=u(d,[["render",C]]);export{V as default};
